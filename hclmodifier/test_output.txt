go: downloading github.com/hashicorp/hcl/v2 v2.23.0
go: downloading github.com/zclconf/go-cty v1.13.0
go: downloading go.uber.org/zap v1.27.0
go: downloading github.com/stretchr/testify v1.8.1
go: downloading github.com/apparentlymart/go-textseg/v15 v15.0.0
go: downloading github.com/google/go-cmp v0.6.0
go: downloading github.com/agext/levenshtein v1.2.1
go: downloading github.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7
go: downloading go.uber.org/multierr v1.10.0
go: downloading github.com/davecgh/go-spew v1.1.1
go: downloading github.com/pmezard/go-difflib v1.0.0
go: downloading gopkg.in/yaml.v3 v3.0.1
go: downloading github.com/apparentlymart/go-textseg/v13 v13.0.0
go: downloading golang.org/x/text v0.11.0
=== RUN   TestEnhancedAttributeValueEquals
=== RUN   TestEnhancedAttributeValueEquals/AttributeValueEquals_with_boolean_true
=== RUN   TestEnhancedAttributeValueEquals/AttributeValueEquals_with_boolean_false
=== RUN   TestEnhancedAttributeValueEquals/AttributeValueEquals_with_integer
=== RUN   TestEnhancedAttributeValueEquals/AttributeValueEquals_with_float_(parsed_as_number)
=== RUN   TestEnhancedAttributeValueEquals/AttributeValueEquals_-_condition_not_met_(bool)
--- PASS: TestEnhancedAttributeValueEquals (0.00s)
    --- PASS: TestEnhancedAttributeValueEquals/AttributeValueEquals_with_boolean_true (0.00s)
    --- PASS: TestEnhancedAttributeValueEquals/AttributeValueEquals_with_boolean_false (0.00s)
    --- PASS: TestEnhancedAttributeValueEquals/AttributeValueEquals_with_integer (0.00s)
    --- PASS: TestEnhancedAttributeValueEquals/AttributeValueEquals_with_float_(parsed_as_number) (0.00s)
    --- PASS: TestEnhancedAttributeValueEquals/AttributeValueEquals_-_condition_not_met_(bool) (0.00s)
=== RUN   TestApplySetMinVersionRule
=== RUN   TestApplySetMinVersionRule/Rule_Applies_-_min_master_version_is_added
=== RUN   TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_min_master_version_already_present
=== RUN   TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_node_version_is_absent
=== RUN   TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_Neither_node_version_nor_min_master_version_present
=== RUN   TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_Resource_type_is_not_google_container_cluster
--- PASS: TestApplySetMinVersionRule (0.00s)
    --- PASS: TestApplySetMinVersionRule/Rule_Applies_-_min_master_version_is_added (0.00s)
    --- PASS: TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_min_master_version_already_present (0.00s)
    --- PASS: TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_node_version_is_absent (0.00s)
    --- PASS: TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_Neither_node_version_nor_min_master_version_present (0.00s)
    --- PASS: TestApplySetMinVersionRule/Rule_Does_Not_Apply_-_Resource_type_is_not_google_container_cluster (0.00s)
=== RUN   TestRuleSetAttributeValue
=== RUN   TestRuleSetAttributeValue/Set_string_attribute
=== RUN   TestRuleSetAttributeValue/Set_boolean_attribute
=== RUN   TestRuleSetAttributeValue/Set_integer_attribute
=== RUN   TestRuleSetAttributeValue/Set_new_attribute
--- PASS: TestRuleSetAttributeValue (0.00s)
    --- PASS: TestRuleSetAttributeValue/Set_string_attribute (0.00s)
    --- PASS: TestRuleSetAttributeValue/Set_boolean_attribute (0.00s)
    --- PASS: TestRuleSetAttributeValue/Set_integer_attribute (0.00s)
    --- PASS: TestRuleSetAttributeValue/Set_new_attribute (0.00s)
=== RUN   TestApplyInitialNodeCountRule
=== RUN   TestApplyInitialNodeCountRule/BothCountsPresent
=== RUN   TestApplyInitialNodeCountRule/OnlyInitialPresent
=== RUN   TestApplyInitialNodeCountRule/OnlyNodeCountPresent
=== RUN   TestApplyInitialNodeCountRule/NeitherCountPresent
=== RUN   TestApplyInitialNodeCountRule/MultipleNodePools
=== RUN   TestApplyInitialNodeCountRule/NoNodePools
=== RUN   TestApplyInitialNodeCountRule/NonGKEResource
=== RUN   TestApplyInitialNodeCountRule/EmptyHCL
=== RUN   TestApplyInitialNodeCountRule/MultipleGKEResources
--- PASS: TestApplyInitialNodeCountRule (0.01s)
    --- PASS: TestApplyInitialNodeCountRule/BothCountsPresent (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/OnlyInitialPresent (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/OnlyNodeCountPresent (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/NeitherCountPresent (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/MultipleNodePools (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/NoNodePools (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/NonGKEResource (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/EmptyHCL (0.00s)
    --- PASS: TestApplyInitialNodeCountRule/MultipleGKEResources (0.00s)
=== RUN   TestApplyMasterCIDRRule
=== RUN   TestApplyMasterCIDRRule/BothPresent
=== RUN   TestApplyMasterCIDRRule/OnlyMasterCIDRPresent_PrivateConfigMissing
=== RUN   TestApplyMasterCIDRRule/OnlyMasterCIDRPresent_SubnetworkMissingInPrivateConfig
=== RUN   TestApplyMasterCIDRRule/OnlyPrivateEndpointSubnetworkPresent_MasterCIDRMissing
=== RUN   TestApplyMasterCIDRRule/NeitherPresent
=== RUN   TestApplyMasterCIDRRule/NeitherPresent_NoPrivateConfigBlock
=== RUN   TestApplyMasterCIDRRule/NonGKEResource
=== RUN   TestApplyMasterCIDRRule/EmptyHCL
=== RUN   TestApplyMasterCIDRRule/MultipleGKEResources_OneMatch
--- PASS: TestApplyMasterCIDRRule (0.01s)
    --- PASS: TestApplyMasterCIDRRule/BothPresent (0.00s)
    --- PASS: TestApplyMasterCIDRRule/OnlyMasterCIDRPresent_PrivateConfigMissing (0.00s)
    --- PASS: TestApplyMasterCIDRRule/OnlyMasterCIDRPresent_SubnetworkMissingInPrivateConfig (0.00s)
    --- PASS: TestApplyMasterCIDRRule/OnlyPrivateEndpointSubnetworkPresent_MasterCIDRMissing (0.00s)
    --- PASS: TestApplyMasterCIDRRule/NeitherPresent (0.00s)
    --- PASS: TestApplyMasterCIDRRule/NeitherPresent_NoPrivateConfigBlock (0.00s)
    --- PASS: TestApplyMasterCIDRRule/NonGKEResource (0.00s)
    --- PASS: TestApplyMasterCIDRRule/EmptyHCL (0.00s)
    --- PASS: TestApplyMasterCIDRRule/MultipleGKEResources_OneMatch (0.00s)
=== RUN   TestApplyBinaryAuthorizationRule
=== RUN   TestApplyBinaryAuthorizationRule/Both_enabled_and_evaluation_mode_present
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleBoth_enabled_and_evaluation_mode_present3221607593/001/test_rule3_683961847.hcl"}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleBoth_enabled_and_evaluation_mode_present3221607593/001/test_rule3_683961847.hcl"}
2025-06-12T10:48:17.301Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "evaluation_mode"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["binary_authorization", "evaluation_mode"], "attributeName": "evaluation_mode"}
2025-06-12T10:48:17.301Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.301Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.301Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "actionType": "RemoveAttribute", "actionPath": ["binary_authorization", "enabled"], "attributesRemoved": 1}
2025-06-12T10:48:17.301Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Only_enabled_present
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleOnly_enabled_present1462666494/001/test_rule3_2636437597.hcl"}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleOnly_enabled_present1462666494/001/test_rule3_2636437597.hcl"}
2025-06-12T10:48:17.302Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "evaluation_mode"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["binary_authorization", "evaluation_mode"], "attributeName": "evaluation_mode"}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["binary_authorization", "evaluation_mode"], "error": "attribute 'evaluation_mode' not found in specified block"}
2025-06-12T10:48:17.302Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.302Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Only_evaluation_mode_present
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleOnly_evaluation_mode_present1075406811/001/test_rule3_3753887781.hcl"}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleOnly_evaluation_mode_present1075406811/001/test_rule3_3753887781.hcl"}
2025-06-12T10:48:17.303Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["binary_authorization", "enabled"], "error": "attribute 'enabled' not found in specified block"}
2025-06-12T10:48:17.303Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.303Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Neither_enabled_nor_evaluation_mode_present
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleNeither_enabled_nor_evaluation_mode_present3347734799/001/test_rule3_1305071680.hcl"}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleNeither_enabled_nor_evaluation_mode_present3347734799/001/test_rule3_1305071680.hcl"}
2025-06-12T10:48:17.304Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["binary_authorization", "enabled"], "error": "attribute 'enabled' not found in specified block"}
2025-06-12T10:48:17.304Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.304Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/binary_authorization_block_present_but_empty
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRulebinary_authorization_block_present_but_empty213843930/001/test_rule3_687607864.hcl"}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRulebinary_authorization_block_present_but_empty213843930/001/test_rule3_687607864.hcl"}
2025-06-12T10:48:17.305Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["binary_authorization", "enabled"], "error": "attribute 'enabled' not found in specified block"}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.305Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/binary_authorization_block_missing_entirely
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRulebinary_authorization_block_missing_entirely2359961393/001/test_rule3_2845136172.hcl"}
2025-06-12T10:48:17.305Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRulebinary_authorization_block_missing_entirely2359961393/001/test_rule3_2845136172.hcl"}
2025-06-12T10:48:17.306Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["binary_authorization"], "blockName": "binary_authorization", "level": 0}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "BlockExists", "conditionPath": ["binary_authorization"], "error": "block 'binary_authorization' not found at path level 0"}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.306Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Non-matching_resource_type_with_binary_authorization
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleNon-matching_resource_type_with_binary_authorization1563283730/001/test_rule3_2268205363.hcl"}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleNon-matching_resource_type_with_binary_authorization1563283730/001/test_rule3_2268205363.hcl"}
2025-06-12T10:48:17.306Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.306Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.306Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Multiple_GKE_resources,_one_with_conflict
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleMultiple_GKE_resources,_one_with_conflict3923548673/001/test_rule3_2412479325.hcl"}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleMultiple_GKE_resources,_one_with_conflict3923548673/001/test_rule3_2412479325.hcl"}
2025-06-12T10:48:17.307Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_one"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_one"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.307Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "evaluation_mode"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["binary_authorization", "evaluation_mode"], "attributeName": "evaluation_mode"}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_one"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_one"], "actionType": "RemoveAttribute", "actionPath": ["binary_authorization", "enabled"], "attributesRemoved": 1}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_two"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_two"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["binary_authorization", "enabled"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["binary_authorization"]}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["binary_authorization", "enabled"], "attributeName": "enabled"}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_two"], "conditionType": "AttributeExists", "conditionPath": ["binary_authorization", "enabled"], "error": "attribute 'enabled' not found in specified block"}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "gke_two"]}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyBinaryAuthorizationRule/Empty_HCL_content
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleEmpty_HCL_content653574060/001/test_rule3_1094530453.hcl"}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyBinaryAuthorizationRuleEmpty_HCL_content653574060/001/test_rule3_1094530453.hcl"}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.308Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Binary Authorization Rule: Remove 'enabled' attribute if 'evaluation_mode' also exists in binary_authorization block", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.308Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
--- PASS: TestApplyBinaryAuthorizationRule (0.01s)
    --- PASS: TestApplyBinaryAuthorizationRule/Both_enabled_and_evaluation_mode_present (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Only_enabled_present (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Only_evaluation_mode_present (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Neither_enabled_nor_evaluation_mode_present (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/binary_authorization_block_present_but_empty (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/binary_authorization_block_missing_entirely (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Non-matching_resource_type_with_binary_authorization (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Multiple_GKE_resources,_one_with_conflict (0.00s)
    --- PASS: TestApplyBinaryAuthorizationRule/Empty_HCL_content (0.00s)
=== RUN   TestApplyServicesIPV4CIDRRule
=== RUN   TestApplyServicesIPV4CIDRRule/Both_attributes_present_in_ip_allocation_policy
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleBoth_attributes_present_in_ip_allocation_policy3883764784/001/test_rule2_706089502.hcl"}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleBoth_attributes_present_in_ip_allocation_policy3883764784/001/test_rule2_706089502.hcl"}
2025-06-12T10:48:17.309Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"], "attributeName": "cluster_secondary_range_name"}
2025-06-12T10:48:17.309Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.309Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.309Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "actionType": "RemoveAttribute", "actionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributesRemoved": 1}
2025-06-12T10:48:17.309Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Only_services_ipv4_cidr_block_present_in_ip_allocation_policy
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleOnly_services_ipv4_cidr_block_present_in_ip_allocation_policy3243553920/001/test_rule2_3198511747.hcl"}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleOnly_services_ipv4_cidr_block_present_in_ip_allocation_policy3243553920/001/test_rule2_3198511747.hcl"}
2025-06-12T10:48:17.310Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"], "attributeName": "cluster_secondary_range_name"}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "cluster_secondary_range_name"], "error": "attribute 'cluster_secondary_range_name' not found in specified block"}
2025-06-12T10:48:17.310Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.310Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Only_cluster_secondary_range_name_present_in_ip_allocation_policy
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleOnly_cluster_secondary_range_name_present_in_ip_allocation_policy3137967017/001/test_rule2_4071364176.hcl"}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleOnly_cluster_secondary_range_name_present_in_ip_allocation_policy3137967017/001/test_rule2_4071364176.hcl"}
2025-06-12T10:48:17.311Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "error": "attribute 'services_ipv4_cidr_block' not found in specified block"}
2025-06-12T10:48:17.311Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.311Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Neither_attribute_relevant_to_Rule_2_present_in_ip_allocation_policy
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleNeither_attribute_relevant_to_Rule_2_present_in_ip_allocation_policy3899559300/001/test_rule2_3143813598.hcl"}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleNeither_attribute_relevant_to_Rule_2_present_in_ip_allocation_policy3899559300/001/test_rule2_3143813598.hcl"}
2025-06-12T10:48:17.312Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "error": "attribute 'services_ipv4_cidr_block' not found in specified block"}
2025-06-12T10:48:17.312Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.312Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/ip_allocation_policy_block_is_present_but_empty
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleip_allocation_policy_block_is_present_but_empty1472188637/001/test_rule2_3727090960.hcl"}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleip_allocation_policy_block_is_present_but_empty1472188637/001/test_rule2_3727090960.hcl"}
2025-06-12T10:48:17.313Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "error": "attribute 'services_ipv4_cidr_block' not found in specified block"}
2025-06-12T10:48:17.313Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.313Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/ip_allocation_policy_block_is_missing_entirely
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleip_allocation_policy_block_is_missing_entirely1047765911/001/test_rule2_1402726219.hcl"}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleip_allocation_policy_block_is_missing_entirely1047765911/001/test_rule2_1402726219.hcl"}
2025-06-12T10:48:17.314Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["ip_allocation_policy"], "blockName": "ip_allocation_policy", "level": 0}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "BlockExists", "conditionPath": ["ip_allocation_policy"], "error": "block 'ip_allocation_policy' not found at path level 0"}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.314Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Non-matching_resource_type_with_similar_nested_structure
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleNon-matching_resource_type_with_similar_nested_structure1377136891/001/test_rule2_531479543.hcl"}
2025-06-12T10:48:17.314Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleNon-matching_resource_type_with_similar_nested_structure1377136891/001/test_rule2_531479543.hcl"}
2025-06-12T10:48:17.315Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.315Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Multiple_google_container_cluster_blocks,_one_matching_for_Rule_2
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleMultiple_google_container_cluster_blocks,_one_matching_for_Rule_2253962462/001/test_rule2_120672851.hcl"}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleMultiple_google_container_cluster_blocks,_one_matching_for_Rule_2253962462/001/test_rule2_120672851.hcl"}
2025-06-12T10:48:17.315Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.315Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"], "attributeName": "cluster_secondary_range_name"}
2025-06-12T10:48:17.316Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.316Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "actionType": "RemoveAttribute", "actionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributesRemoved": 1}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"], "attributeName": "cluster_secondary_range_name"}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "cluster_secondary_range_name"], "error": "attribute 'cluster_secondary_range_name' not found in specified block"}
2025-06-12T10:48:17.316Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.316Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Multiple_google_container_cluster_blocks,_ip_policy_missing_in_one
2025-06-12T10:48:17.317Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleMultiple_google_container_cluster_blocks,_ip_policy_missing_in_one441987185/001/test_rule2_4033156850.hcl"}
2025-06-12T10:48:17.317Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleMultiple_google_container_cluster_blocks,_ip_policy_missing_in_one441987185/001/test_rule2_4033156850.hcl"}
2025-06-12T10:48:17.318Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "alpha"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "alpha"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["ip_allocation_policy"], "blockName": "ip_allocation_policy", "level": 0}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "alpha"], "conditionType": "BlockExists", "conditionPath": ["ip_allocation_policy"], "error": "block 'ip_allocation_policy' not found at path level 0"}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "alpha"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "beta"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "beta"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "cluster_secondary_range_name"], "attributeName": "cluster_secondary_range_name"}
2025-06-12T10:48:17.318Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "beta"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.318Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributeName": "services_ipv4_cidr_block"}
2025-06-12T10:48:17.318Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "beta"], "actionType": "RemoveAttribute", "actionPath": ["ip_allocation_policy", "services_ipv4_cidr_block"], "attributesRemoved": 1}
2025-06-12T10:48:17.318Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyServicesIPV4CIDRRule/Empty_HCL_content
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleEmpty_HCL_content3495326854/001/test_rule2_3533905715.hcl"}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyServicesIPV4CIDRRuleEmpty_HCL_content3495326854/001/test_rule2_3533905715.hcl"}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Services IPV4 CIDR Rule: Remove services_ipv4_cidr_block if cluster_secondary_range_name (for services) exists in ip_allocation_policy", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
--- PASS: TestApplyServicesIPV4CIDRRule (0.01s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Both_attributes_present_in_ip_allocation_policy (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Only_services_ipv4_cidr_block_present_in_ip_allocation_policy (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Only_cluster_secondary_range_name_present_in_ip_allocation_policy (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Neither_attribute_relevant_to_Rule_2_present_in_ip_allocation_policy (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/ip_allocation_policy_block_is_present_but_empty (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/ip_allocation_policy_block_is_missing_entirely (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Non-matching_resource_type_with_similar_nested_structure (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Multiple_google_container_cluster_blocks,_one_matching_for_Rule_2 (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Multiple_google_container_cluster_blocks,_ip_policy_missing_in_one (0.00s)
    --- PASS: TestApplyServicesIPV4CIDRRule/Empty_HCL_content (0.00s)
=== RUN   TestApplyClusterIPV4CIDRRule
=== RUN   TestApplyClusterIPV4CIDRRule/Both_attributes_present
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleBoth_attributes_present2330181331/001/test_1395168811.hcl"}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleBoth_attributes_present2330181331/001/test_1395168811.hcl"}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "attributeName": "cluster_ipv4_cidr_block"}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.319Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "actionType": "RemoveAttribute", "actionPath": ["cluster_ipv4_cidr"], "attributesRemoved": 1}
2025-06-12T10:48:17.319Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Only_cluster_ipv4_cidr_present_(no_ip_allocation_policy_block)
2025-06-12T10:48:17.320Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_cluster_ipv4_cidr_present_(no_ip_allocation_policy_block)3628036890/001/test_1017151307.hcl"}
2025-06-12T10:48:17.320Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_cluster_ipv4_cidr_present_(no_ip_allocation_policy_block)3628036890/001/test_1017151307.hcl"}
2025-06-12T10:48:17.321Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["ip_allocation_policy"], "blockName": "ip_allocation_policy", "level": 0}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "BlockExists", "conditionPath": ["ip_allocation_policy"], "error": "block 'ip_allocation_policy' not found at path level 0"}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.321Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Only_cluster_ipv4_cidr_present_(ip_allocation_policy_block_exists_but_no_cluster_ipv4_cidr_block)
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_cluster_ipv4_cidr_present_(ip_allocation_policy_block_exists_but_no_cluster_ipv4_cidr_block)898652561/001/test_2192719105.hcl"}
2025-06-12T10:48:17.321Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_cluster_ipv4_cidr_present_(ip_allocation_policy_block_exists_but_no_cluster_ipv4_cidr_block)898652561/001/test_2192719105.hcl"}
2025-06-12T10:48:17.322Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "attributeName": "cluster_ipv4_cidr_block"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "error": "attribute 'cluster_ipv4_cidr_block' not found in specified block"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Only_ip_allocation_policy.cluster_ipv4_cidr_block_present
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_ip_allocation_policy.cluster_ipv4_cidr_block_present1704801127/001/test_2539785879.hcl"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleOnly_ip_allocation_policy.cluster_ipv4_cidr_block_present1704801127/001/test_2539785879.hcl"}
2025-06-12T10:48:17.322Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["cluster_ipv4_cidr"], "error": "attribute 'cluster_ipv4_cidr' not found in specified block"}
2025-06-12T10:48:17.322Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.322Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Neither_attribute_relevant_to_Rule_1_present
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleNeither_attribute_relevant_to_Rule_1_present2147459062/001/test_4280879412.hcl"}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleNeither_attribute_relevant_to_Rule_1_present2147459062/001/test_4280879412.hcl"}
2025-06-12T10:48:17.323Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "AttributeExists", "conditionPath": ["cluster_ipv4_cidr"], "error": "attribute 'cluster_ipv4_cidr' not found in specified block"}
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.323Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/ip_allocation_policy_block_is_missing_entirely,_cluster_ipv4_cidr_present
2025-06-12T10:48:17.323Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleip_allocation_policy_block_is_missing_entirely,_cluster_ipv4_cidr_present4109741615/001/test_3399839632.hcl"}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleip_allocation_policy_block_is_missing_entirely,_cluster_ipv4_cidr_present4109741615/001/test_3399839632.hcl"}
2025-06-12T10:48:17.324Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["ip_allocation_policy"], "blockName": "ip_allocation_policy", "level": 0}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "BlockExists", "conditionPath": ["ip_allocation_policy"], "error": "block 'ip_allocation_policy' not found at path level 0"}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.324Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Non-matching_resource_type_(google_compute_instance)
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleNon-matching_resource_type_(google_compute_instance)1797482240/001/test_1646342443.hcl"}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleNon-matching_resource_type_(google_compute_instance)1797482240/001/test_1646342443.hcl"}
2025-06-12T10:48:17.324Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.324Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.324Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Multiple_google_container_cluster_blocks,_one_matching
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleMultiple_google_container_cluster_blocks,_one_matching3373988165/001/test_1311157476.hcl"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleMultiple_google_container_cluster_blocks,_one_matching3373988165/001/test_1311157476.hcl"}
2025-06-12T10:48:17.325Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "attributeName": "cluster_ipv4_cidr_block"}
2025-06-12T10:48:17.325Z	INFO	hclmodifier/modifier.go:499	All conditions met for resource. Performing actions on the resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:316	RemoveAttributeByPath: Attempting to remove attribute.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.325Z	INFO	hclmodifier/modifier.go:351	RemoveAttributeByPath: Successfully removed attribute.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.325Z	INFO	hclmodifier/modifier.go:701	Action RemoveAttribute successful.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "actionType": "RemoveAttribute", "actionPath": ["cluster_ipv4_cidr"], "attributesRemoved": 1}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:240	GetNestedBlock: Successfully found nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "attributeName": "cluster_ipv4_cidr_block"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"], "conditionType": "AttributeExists", "conditionPath": ["ip_allocation_policy", "cluster_ipv4_cidr_block"], "error": "attribute 'cluster_ipv4_cidr_block' not found in specified block"}
2025-06-12T10:48:17.325Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.325Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 1, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Multiple_google_container_cluster_blocks,_none_matching
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleMultiple_google_container_cluster_blocks,_none_matching3549155370/001/test_1233607896.hcl"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleMultiple_google_container_cluster_blocks,_none_matching3549155370/001/test_1233607896.hcl"}
2025-06-12T10:48:17.326Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:295	GetAttributeValueByPath: Successfully retrieved attribute value.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:211	GetNestedBlock: Attempting to find nested block.	{"path": ["ip_allocation_policy"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:230	GetNestedBlock: Block not found at current level.	{"path": ["ip_allocation_policy"], "blockName": "ip_allocation_policy", "level": 0}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:603	Condition BlockExists not met (block not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"], "conditionType": "BlockExists", "conditionPath": ["ip_allocation_policy"], "error": "block 'ip_allocation_policy' not found at path level 0"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "primary"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:482	Target resource matched.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:487	Executing as Standard Rule. Checking conditions for the resource block itself.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:262	GetAttributeValueByPath: Attempting to get attribute value.	{"path": ["cluster_ipv4_cidr"]}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:285	GetAttributeValueByPath: Attribute not found.	{"path": ["cluster_ipv4_cidr"], "attributeName": "cluster_ipv4_cidr"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:587	Condition AttributeExists not met (attribute not found or error accessing).	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"], "conditionType": "AttributeExists", "conditionPath": ["cluster_ipv4_cidr"], "error": "attribute 'cluster_ipv4_cidr' not found in specified block"}
2025-06-12T10:48:17.326Z	DEBUG	hclmodifier/modifier.go:510	Not all conditions met for resource block.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster", "executionType": "Standard", "resourceLabels": ["google_container_cluster", "secondary"]}
2025-06-12T10:48:17.326Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
=== RUN   TestApplyClusterIPV4CIDRRule/Empty_HCL_content
2025-06-12T10:48:17.327Z	DEBUG	hclmodifier/modifier.go:37	Reading HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleEmpty_HCL_content587244801/001/test_3916254363.hcl"}
2025-06-12T10:48:17.327Z	DEBUG	hclmodifier/modifier.go:44	Parsing HCL file	{"filePath": "/tmp/TestApplyClusterIPV4CIDRRuleEmpty_HCL_content587244801/001/test_3916254363.hcl"}
2025-06-12T10:48:17.327Z	INFO	hclmodifier/modifier.go:441	Starting ApplyRules processing.	{"numberOfRules": 1}
2025-06-12T10:48:17.327Z	DEBUG	hclmodifier/modifier.go:453	Processing rule.	{"ruleName": "Cluster IPV4 CIDR Rule: Remove top-level cluster_ipv4_cidr if ip_allocation_policy.cluster_ipv4_cidr_block exists", "targetResourceType": "google_container_cluster"}
2025-06-12T10:48:17.327Z	INFO	hclmodifier/modifier.go:562	ApplyRules processing finished.	{"totalModifications": 0, "numberOfErrors": 0}
--- PASS: TestApplyClusterIPV4CIDRRule (0.01s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Both_attributes_present (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Only_cluster_ipv4_cidr_present_(no_ip_allocation_policy_block) (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Only_cluster_ipv4_cidr_present_(ip_allocation_policy_block_exists_but_no_cluster_ipv4_cidr_block) (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Only_ip_allocation_policy.cluster_ipv4_cidr_block_present (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Neither_attribute_relevant_to_Rule_1_present (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/ip_allocation_policy_block_is_missing_entirely,_cluster_ipv4_cidr_present (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Non-matching_resource_type_(google_compute_instance) (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Multiple_google_container_cluster_blocks,_one_matching (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Multiple_google_container_cluster_blocks,_none_matching (0.00s)
    --- PASS: TestApplyClusterIPV4CIDRRule/Empty_HCL_content (0.00s)
=== RUN   TestApplyAutopilotRule
=== RUN   TestApplyAutopilotRule/enable_autopilot_is_true,_all_conflicting_fields_present
=== RUN   TestApplyAutopilotRule/enable_autopilot_is_false,_conflicting_fields_present
    modifier_test.go:2439: Expected 'cluster_autoscaling' block to be removed, but it was found.
=== RUN   TestApplyAutopilotRule/enable_autopilot_not_present,_conflicting_fields_present
=== RUN   TestApplyAutopilotRule/enable_autopilot_is_true,_no_conflicting_fields_present
    modifier_test.go:2325: ApplyAutopilotRule() modifications = 1, want 13. HCL content:
        resource "google_container_cluster" "clean_autopilot_cluster" {
          name             = "clean-autopilot-cluster"
          enable_autopilot = true
          location         = "us-central1"
          addons_config {
            http_load_balancing { disabled = true }
          }
          cluster_autoscaling {
            autoscaling_profile = "BALANCED"
          }
          binary_authorization {
            evaluation_mode = "DISABLED"
          }
        }
        Modified HCL:
        resource "google_container_cluster" "clean_autopilot_cluster" {
          name             = "clean-autopilot-cluster"
          enable_autopilot = true
          location         = "us-central1"
          addons_config {
            http_load_balancing { disabled = true }
          }
          binary_authorization {
            evaluation_mode = "DISABLED"
          }
        }
    modifier_test.go:2443: Expected 'cluster_autoscaling' block to exist, but it was not found.
=== RUN   TestApplyAutopilotRule/enable_autopilot_is_not_a_boolean
=== RUN   TestApplyAutopilotRule/No_google_container_cluster_blocks
=== RUN   TestApplyAutopilotRule/Empty_HCL_content
=== RUN   TestApplyAutopilotRule/Autopilot_true,_only_some_attributes_to_remove
--- FAIL: TestApplyAutopilotRule (0.01s)
    --- PASS: TestApplyAutopilotRule/enable_autopilot_is_true,_all_conflicting_fields_present (0.00s)
    --- FAIL: TestApplyAutopilotRule/enable_autopilot_is_false,_conflicting_fields_present (0.00s)
    --- PASS: TestApplyAutopilotRule/enable_autopilot_not_present,_conflicting_fields_present (0.00s)
    --- FAIL: TestApplyAutopilotRule/enable_autopilot_is_true,_no_conflicting_fields_present (0.00s)
    --- PASS: TestApplyAutopilotRule/enable_autopilot_is_not_a_boolean (0.00s)
    --- PASS: TestApplyAutopilotRule/No_google_container_cluster_blocks (0.00s)
    --- PASS: TestApplyAutopilotRule/Empty_HCL_content (0.00s)
    --- PASS: TestApplyAutopilotRule/Autopilot_true,_only_some_attributes_to_remove (0.00s)
=== RUN   TestModifier_ApplyRuleRemoveLoggingService
=== RUN   TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_be_removed_when_telemetry_is_ENABLED
=== RUN   TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_when_telemetry_is_DISABLED
=== RUN   TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_when_telemetry_block_is_missing
=== RUN   TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_if_logging_service_attribute_is_missing
=== RUN   TestModifier_ApplyRuleRemoveLoggingService/Non-GKE_resource_with_similar_structure,_should_not_be_modified
--- PASS: TestModifier_ApplyRuleRemoveLoggingService (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_be_removed_when_telemetry_is_ENABLED (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_when_telemetry_is_DISABLED (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_when_telemetry_block_is_missing (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveLoggingService/logging_service_should_NOT_be_removed_if_logging_service_attribute_is_missing (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveLoggingService/Non-GKE_resource_with_similar_structure,_should_not_be_modified (0.00s)
=== RUN   TestModifier_ApplyRuleRemoveMonitoringService
=== RUN   TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_be_removed_when_monitoring_config_block_exists
=== RUN   TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_NOT_be_removed_when_monitoring_config_block_is_missing
=== RUN   TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_NOT_be_removed_if_monitoring_service_attribute_is_missing
=== RUN   TestModifier_ApplyRuleRemoveMonitoringService/Non-GKE_resource_with_similar_structure,_should_not_be_modified
--- PASS: TestModifier_ApplyRuleRemoveMonitoringService (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_be_removed_when_monitoring_config_block_exists (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_NOT_be_removed_when_monitoring_config_block_is_missing (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveMonitoringService/monitoring_service_should_NOT_be_removed_if_monitoring_service_attribute_is_missing (0.00s)
    --- PASS: TestModifier_ApplyRuleRemoveMonitoringService/Non-GKE_resource_with_similar_structure,_should_not_be_modified (0.00s)
FAIL
exit status 1
FAIL	github.com/kotatut/cluster_import_cleaner/hclmodifier	0.075s
